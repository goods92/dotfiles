import { ServerService } from './server.service';
import { HomebridgeNetworkInterfacesDto } from './server.dto';
export declare class ServerController {
    private serverService;
    constructor(serverService: ServerService);
    restartServer(): Promise<{
        ok: boolean;
        command: string;
        restartingUI: boolean;
    }>;
    getBridgePairingInformation(): Promise<import("@nestjs/common").ServiceUnavailableException | {
        displayName: any;
        pincode: any;
        setupCode: string;
        isPaired: boolean;
    }>;
    getQrCode(): Promise<any>;
    resetHomebridgeAccessory(): Promise<void>;
    resetCachedAccessories(): Promise<void>;
    getCachedAccessories(): Promise<any>;
    deleteCachedAccessory(uuid: string): Promise<unknown>;
    getDevicePairings(): Promise<any[]>;
    deleteDevicePairing(deviceId: string): Promise<void>;
    getSystemNetworkInterfaces(): Promise<import("systeminformation").Systeminformation.NetworkInterfacesData[]>;
    getHomebridgeNetworkInterfaces(): Promise<string[]>;
    setHomebridgeNetworkInterfaces(body: HomebridgeNetworkInterfacesDto): Promise<void>;
}
